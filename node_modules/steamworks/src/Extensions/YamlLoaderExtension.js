const ArgumentParser = require('argparse').ArgumentParser,
      DI             = require('apex-di');

class YamlLoaderExtension extends DI.YamlLoader
{
    _parse (container, path_info, data)
    {
        if (!data) {
            return;
        }

        super._parse(container, path_info, data);

        if (typeof data.arguments === 'object') {
            this._parseArguments(container, data.arguments);
        }
    }

    _parseArguments (container, args)
    {
        const parser = new ArgumentParser({
            version:     '0.0.1',
            addHelp:     true,
            description: 'SteamWorks Script generator',
        });

        Object.keys(args).forEach((key) => {
            let flags = [`--${key}`];
            if (typeof args[key].flag === 'string') {
                flags.push(`-${args[key].flag}`);
            }

            let options = {};
            if (typeof args[key].help === 'string') {
                options.help = args[key].help;
            }

            if (typeof args[key].default === 'string') {
                options.defaultValue = args[key].default;
            }

            if (typeof args[key].required === 'boolean') {
                options.required = args[key].required;
            }

            parser.addArgument(flags, options);
        });

        const _args = parser.parseArgs();

        for (let i in _args) {
            if (!_args.hasOwnProperty(i)) {
                continue;
            }

            container.setParameter(i, _args[i] || '');
        }
    }
}

module.exports = YamlLoaderExtension;