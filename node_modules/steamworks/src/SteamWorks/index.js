const App   = require('./Entity/App');
const Depot = require('./Entity/Depot');
const YAML  = require('js-yaml');
const fs    = require('fs');
const path  = require('path');

class SteamWorks
{
    constructor (configPath, app_respository)
    {

        const config_file = path.join(process.cwd(), configPath);
        const config_path = path.dirname(config_file);
        const config      = YAML.load(fs.readFileSync(config_file));


        console.log(config.apps);
        Object.keys(config.apps).forEach((app_id) => {

            let app_data = config.apps[app_id];
            let app      = new App(app_id);
            let app_dir = app_data.path;

            if(path.resolve(app_dir) !== path.normalize(app_dir)) {
                app_dir = path.resolve(path.join(config_path, app_data.path));
            }

            if (!fs.existsSync(app_dir)) {
                throw new Error(`${app_dir} could not be found, please check the app path in ${path.basename(config_file)} and try again`);
            }

            app.description = app_data.description;

            Object.keys(app_data.depots || {}).forEach(depot_id => {
                let depot_data = app_data.depots[depot_id];
                let depot      = new Depot(depot_id);

                depot.addFileMapping('*', '.', true);

                app.addDepot(depot);
            });


            app_respository.save(app);
        });
    }
}

module.exports = SteamWorks;
